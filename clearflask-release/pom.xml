<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>clearflask-parent</artifactId>
        <groupId>com.smotana.clearflask</groupId>
        <version>1.7.8-SNAPSHOT</version>
    </parent>

    <artifactId>clearflask-release</artifactId>
    <version>1.7.8-SNAPSHOT</version>

    <name>clearflask-release</name>
    <url>https://clearflask.com</url>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.smotana.clearflask</groupId>
                                    <artifactId>clearflask-server</artifactId>
                                    <version>${project.version}</version>
                                    <type>war</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/docker-root-server/ROOT/
                                    </outputDirectory>
                                    <includes>**</includes>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.smotana.clearflask</groupId>
                                    <artifactId>clearflask-server</artifactId>
                                    <classifier>selfhost-run</classifier>
                                    <version>${project.version}</version>
                                    <type>tar.gz</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/docker-root-server/ROOT/
                                    </outputDirectory>
                                    <includes>**</includes>
                                    <excludes>COPYING</excludes>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.smotana.clearflask</groupId>
                                    <artifactId>clearflask-server</artifactId>
                                    <classifier>selfhost-run</classifier>
                                    <version>${project.version}</version>
                                    <type>tar.gz</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/docker-root-server/</outputDirectory>
                                    <includes>logback.xml,logging.properties</includes>
                                    <excludes>COPYING</excludes>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.smotana.clearflask</groupId>
                                    <artifactId>clearflask-frontend</artifactId>
                                    <classifier>connect</classifier>
                                    <version>${project.version}</version>
                                    <type>tar.gz</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/docker-compose-local/connect/
                                    </outputDirectory>
                                    <includes>connect.config.local-template.json</includes>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.smotana.clearflask</groupId>
                                    <artifactId>clearflask-server</artifactId>
                                    <classifier>local-run</classifier>
                                    <version>${project.version}</version>
                                    <type>tar.gz</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/docker-compose-local/</outputDirectory>
                                    <includes>**</includes>
                                    <excludes>COPYING</excludes>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.smotana.clearflask</groupId>
                                    <artifactId>clearflask-server</artifactId>
                                    <classifier>selfhost-run</classifier>
                                    <version>${project.version}</version>
                                    <type>tar.gz</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/docker-compose-selfhost/
                                    </outputDirectory>
                                    <includes>**</includes>
                                    <excludes>COPYING</excludes>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.smotana.clearflask</groupId>
                                    <artifactId>clearflask-frontend</artifactId>
                                    <classifier>connect</classifier>
                                    <version>${project.version}</version>
                                    <type>tar.gz</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/docker-compose-selfhost/
                                    </outputDirectory>
                                    <includes>connect.config.selfhost.json</includes>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.smotana.clearflask</groupId>
                                    <artifactId>clearflask-frontend</artifactId>
                                    <classifier>connect</classifier>
                                    <version>${project.version}</version>
                                    <type>tar.gz</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/docker-root-connect/ROOT/
                                    </outputDirectory>
                                    <includes>**</includes>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/test/resources/</directory>
                                    <filtering>false</filtering>
                                    <includes>
                                        <include>nginx.conf</include>
                                    </includes>
                                </resource>
                            </resources>
                            <outputDirectory>${project.build.directory}/docker-compose-local/nginx/conf.d
                            </outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-dockerfile-connect</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/main/docker/dockerfile</directory>
                                    <filtering>false</filtering>
                                    <includes>
                                        <include>connect.Dockerfile</include>
                                    </includes>
                                </resource>
                            </resources>
                            <outputDirectory>${project.build.directory}/docker-root-connect</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-dockerfile-server</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/main/docker/dockerfile</directory>
                                    <filtering>false</filtering>
                                    <includes>
                                        <include>server.Dockerfile</include>
                                    </includes>
                                </resource>
                            </resources>
                            <outputDirectory>${project.build.directory}/docker-root-server</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>${basedir}/src/test/resources/self-signed-tls.sh</executable>
                    <arguments>
                        <argument>-c=US</argument>
                        <argument>-s=Ulaanbaatar</argument>
                        <argument>-l="Ulaanbaatar"</argument>
                        <argument>-o=Smotana</argument>
                        <argument>-u=IT</argument>
                        <argument>-n=localhost</argument>
                        <argument>-e=admin@localhost</argument>
                        <argument>-p=${project.build.directory}/docker-compose-local/nginx/conf.d/</argument>
                        <argument>-v</argument>
                    </arguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <pushRegistry>ghcr.io</pushRegistry>
                    <verbose>true</verbose>
                    <images>
                        <image>
                            <name>clearflask/clearflask-connect</name>
                            <build>
                                <contextDir>${project.build.directory}/docker-root-connect</contextDir>
                                <dockerFile>connect.Dockerfile</dockerFile>
                                <filter>@</filter>
                                <tags>
                                    <tag>latest</tag>
                                    <tag>${project.version}</tag>
                                </tags>
                                <createImageOptions>
                                    <platform>linux/amd64</platform>
                                </createImageOptions>
                                <buildx>
                                    <platforms>
                                        <platform>linux/arm64</platform>
                                        <platform>linux/amd64</platform>
                                    </platforms>
                                </buildx>
                            </build>
                        </image>
                        <image>
                            <name>clearflask/clearflask-server</name>
                            <build>
                                <contextDir>${project.build.directory}/docker-root-server</contextDir>
                                <dockerFile>server.Dockerfile</dockerFile>
                                <filter>@</filter>
                                <tags>
                                    <tag>latest</tag>
                                    <tag>${project.version}</tag>
                                </tags>
                                <createImageOptions>
                                    <platform>linux/amd64</platform>
                                </createImageOptions>
                                <buildx>
                                    <platforms>
                                        <platform>linux/arm64</platform>
                                        <platform>linux/amd64</platform>
                                    </platforms>
                                </buildx>
                            </build>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>build</id>
                        <phase>install</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>${project.basedir}/src/main/assembly/compose-self-host.xml</descriptor>
                        <descriptor>${project.basedir}/src/main/assembly/compose-local.xml</descriptor>
                    </descriptors>
                    <tarLongFileMode>posix</tarLongFileMode>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>false</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker-images-push</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>push</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
