### SPDX-FileCopyrightText: 2024 Matus Faro <matus@smotana.com>
### SPDX-License-Identifier: Apache-2.0
components:
  schemas:
    Convo:
      type: object
      required:
        - convoId
        - created
        - title
      properties:
        convoId:
          type: string
        created:
          type: string
          format: date-time
        title:
          type: string
    ConvoMessage:
      type: object
      required:
        - messageId
        - created
        - content
      properties:
        messageId:
          type: string
        created:
          type: string
          format: date-time
        authorType:
          type: string
          enum: [ USER, AI, ALERT ]
        content:
          type: string
    ConvoMessageCreate:
      type: object
      required:
        - content
      properties:
        content:
          type: string

/project/{projectId}/admin/llm/convo/list:
  get:
    operationId: convoList
    tags: [ LlmAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              title: ConvoListResponse
              type: object
              required:
                - results
              properties:
                results:
                  type: array
                  items:
                    $ref: 'api-llm.yaml#/components/schemas/Convo'
/project/{projectId}/admin/llm/convo/{convoId}:
  get:
    operationId: convoDetails
    tags: [ LlmAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: convoId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              title: ConvoDetailsResponse
              type: object
              required:
                - results
              properties:
                results:
                  type: array
                  items:
                    $ref: 'api-llm.yaml#/components/schemas/ConvoMessage'
  delete:
    operationId: convoDelete
    tags: [ LlmAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: convoId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        $ref: 'api-client.yaml#/components/responses/Ok'
/project/{projectId}/admin/llm/convo/{convoId}/message:
  put:
    operationId: messageCreate
    tags: [ LlmAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: convoId
        description: If 'new', a new convo is created
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-llm.yaml#/components/schemas/ConvoMessageCreate'
    responses:
      '200':
        content:
          application/json:
            schema:
              title: CreateMessageResponse
              type: object
              required:
                - convoId
                - message
                - responseMessageId
              properties:
                convoId:
                  type: string
                message:
                  $ref: 'api-llm.yaml#/components/schemas/ConvoMessage'
                responseMessageId:
                  type: string
/project/{projectId}/admin/llm/convo/{convoId}/message/{messageId}:
  get:
    x-sse: true
    operationId: messageStreamGet
    tags: [ LlmAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: convoId
        in: path
        required: true
        schema:
          type: string
      - name: messageId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          text/event-stream: { }
