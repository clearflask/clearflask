## SPDX-FileCopyrightText: 2019-2022 Matus Faro <matus@smotana.com>
## SPDX-License-Identifier: Apache-2.0
components:
  schemas:
    IdeaSearch:
      x-clearflask-prop: { order: 100, name: 'Filter', description: 'Custom filter to limit the ideas shown to the user' }
      type: object
      properties:
        sortBy:
          x-clearflask-prop: { order: 3, name: 'Sort', description: 'Display ideas by this sort order', defaultValue: 'Trending' }
          type: string
          enum:
            - Trending
            - Top
            - New
            - Random
            - DragAndDrop
        filterCategoryIds:
          x-clearflask-prop: { order: 1, name: 'Category', description: 'Display only posts from these categories' }
          x-clearflask-prop-link: { idPropName: 'categoryId', linkPath: [ 'content', 'categories' ], displayPropName: 'name', colorPropName: 'color' }
          type: array
          items:
            type: string
        invertCategory:
          x-clearflask-prop: { order: 2, name: 'Invert category', description: 'Invert selection of matching categories', falseAsUndefined: true }
          type: boolean
        filterStatusIds:
          x-clearflask-prop: { order: 4, name: 'Status', description: 'Display only ideas having these statuses' }
          x-clearflask-prop-link: { idPropName: 'statusId', linkPath: [ 'content', 'categories', '<$>', 'workflow', 'statuses' ], displayPropName: 'name', colorPropName: 'color', filterPath: [ '.', 'filterCategoryIds' ], filterIdPropName: 'categoryId', filterShowAllIfNone: true }
          type: array
          items:
            type: string
        invertStatus:
          x-clearflask-prop: { order: 5, name: 'Invert status', description: 'Invert selection of matching statuses', falseAsUndefined: true }
          type: boolean
        filterTagIds:
          x-clearflask-prop: { order: 6, name: 'Tag', description: 'Display only posts with these tags' }
          x-clearflask-prop-link: { idPropName: 'tagId', linkPath: [ 'content', 'categories', '<$>', 'tagging', 'tags' ], displayPropName: 'name', colorPropName: 'color', filterPath: [ '.', 'filterCategoryIds' ], filterIdPropName: 'categoryId', filterShowAllIfNone: true }
          type: array
          items:
            type: string
        invertTag:
          x-clearflask-prop: { order: 7, name: 'Invert tag', description: 'Invert selection of matching tags', falseAsUndefined: true }
          type: boolean
        filterAuthorId:
          x-clearflask-hide: true
          type: string
        invertAuthorId:
          x-clearflask-hide: true
          type: boolean
        searchText:
          x-clearflask-prop: { order: 8, name: 'Search query', description: 'Filter results matching this search term' }
          type: string
        fundedByMeAndActive:
          x-clearflask-hide: true
          x-clearflask-prop: { order: 9, name: 'Funded by me', description: 'Ideas funded by me and can be adjust' }
          type: boolean
        limit:
          x-clearflask-prop: { order: 10, name: 'Limit', description: 'Optionally set a limit on how many results to return' }
          minimum: 1
          maximum: 50
          type: integer
          format: int64
        similarToIdeaId:
          x-clearflask-hide: true
          type: string
    IdeaSearchAdmin:
      allOf:
        - $ref: 'api-idea.yaml#/components/schemas/IdeaSearch'
        - type: object
          properties:
            filterCreatedStart:
              type: string
              format: date-time
            filterCreatedEnd:
              type: string
              format: date-time
            filterLastActivityStart:
              type: string
              format: date-time
            filterLastActivityEnd:
              type: string
              format: date-time
    HistogramInterval:
      type: string
      enum:
        - DAY
        - WEEK
        - MONTH
        - QUARTER
        - YEAR
    HistogramSearchAdmin:
      type: object
      properties:
        filterCreatedStart:
          type: string
          format: date
        filterCreatedEnd:
          type: string
          format: date
        interval:
          $ref: 'api-idea.yaml#/components/schemas/HistogramInterval'
    IdeaHistogramSearchAdmin:
      allOf:
        - $ref: 'api-idea.yaml#/components/schemas/HistogramSearchAdmin'
        - type: object
          properties:
            filterCategoryIds:
              type: array
              items:
                type: string
            filterStatusIds:
              type: array
              items:
                type: string
            filterTagIds:
              type: array
              items:
                type: string
            filterCreatedStart:
              type: string
              format: date
            filterCreatedEnd:
              type: string
              format: date
    HistogramResponse:
      type: object
      required:
        - points
        - hits
      properties:
        points:
          type: array
          items:
            type: object
            required:
              - ts
              - cnt
            properties:
              ts:
                type: string
                format: date
              cnt:
                type: integer
                format: int64
        hits:
          $ref: 'api-idea.yaml#/components/schemas/Hits'
    Idea:
      type: object
      required:
        - ideaId
        - authorUserId
        - created
        - title
        - categoryId
        - tagIds
        - commentCount
        - childCommentCount
      properties:
        ideaId:
          type: string
        authorUserId:
          type: string
        authorName:
          type: string
        authorIsMod:
          type: boolean
        created:
          type: string
          format: date-time
        title:
          type: string
        description:
          type: string
        response:
          type: string
        responseAuthorUserId:
          type: string
        responseAuthorName:
          type: string
        responseEdited:
          type: string
          format: date-time
        categoryId:
          type: string
        statusId:
          type: string
        tagIds:
          type: array
          items:
            type: string
        commentCount:
          description: Total comment count
          type: integer
          format: int64
        childCommentCount:
          description: Count of immediate child comments only
          type: integer
          format: int64
        funded:
          type: integer
          format: int64
        fundGoal:
          type: integer
          format: int64
        fundersCount:
          type: integer
          format: int64
        voteValue:
          type: integer
          format: int64
        expressionsValue:
          description: Combined value of all expressions. Not the expression count.
          type: number
          format: double
        expressions:
          description: Mapping expression display to count
          type: object
          additionalProperties:
            type: integer
            format: int64
        linkedToPostIds:
          type: array
          items:
            type: string
        linkedFromPostIds:
          type: array
          items:
            type: string
        mergedToPostId:
          type: string
        mergedToPostTime:
          type: string
          format: date-time
        mergedPostIds:
          type: array
          items:
            type: string
        order:
          type: number
          format: double
        linkedGitHubUrl:
          type: string
        coverImg:
          type: string
    IdeaConnectResponse:
      type: object
      required:
        - idea
        - parentIdea
      properties:
        idea:
          $ref: 'api-idea.yaml#/components/schemas/Idea'
        parentIdea:
          $ref: 'api-idea.yaml#/components/schemas/Idea'
    IdeaDraftSearch:
      type: object
      properties:
        filterCategoryIds:
          type: array
          items:
            type: string

    IdeaWithVote:
      allOf:
        - $ref: 'api-idea.yaml#/components/schemas/Idea'
        - type: object
          required:
            - vote
          properties:
            vote:
              $ref: 'api-vote.yaml#/components/schemas/IdeaVote'
    IdeaCreate:
      type: object
      properties:
        authorUserId:
          type: string
        title:
          type: string
        description:
          type: string
        categoryId:
          type: string
        tagIds:
          type: array
          items:
            type: string
      required:
        - authorUserId
        - title
        - categoryId
        - tagIds
    IdeaCreateAdmin:
      allOf:
        - $ref: 'api-idea.yaml#/components/schemas/IdeaCreate'
        - type: object
          properties:
            response:
              type: string
            statusId:
              type: string
            fundGoal:
              type: integer
              format: int64
            notifySubscribers:
              title: NotifySubscribers
              type: object
              required:
                - title
                - body
              properties:
                title:
                  type: string
                body:
                  type: string
            linkedFromPostIds:
              type: array
              items:
                type: string
            order:
              type: number
              format: double
            coverImg:
              type: string
    IdeaDraftAdmin:
      allOf:
        - $ref: 'api-idea.yaml#/components/schemas/IdeaCreateAdmin'
        - type: object
          required:
            - lastSaved
            - draftId
          properties:
            draftId:
              type: string
            lastSaved:
              type: string
              format: date-time
    IdeaUpdate:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
    IdeaUpdateAdmin:
      allOf:
        - $ref: 'api-idea.yaml#/components/schemas/IdeaUpdate'
        - type: object
          properties:
            response:
              type: string
            responseAuthorUserId:
              type: string
            statusId:
              type: string
            tagIds:
              type: array
              items:
                type: string
            fundGoal:
              type: integer
              format: int64
            suppressNotifications:
              description: Suppresses notifications if status or response was changed
              type: boolean
            order:
              type: number
              format: double
            coverImg:
              type: string
    Hits:
      type: object
      required:
        - value
      properties:
        value:
          type: integer
          format: int64
        isGte:
          type: boolean
    SubscriptionListenerIdea:
      type: object
      required:
        - listenerUrl
        - eventType
      properties:
        listenerUrl:
          type: string
        eventType:
          $ref: 'api-idea.yaml#/components/schemas/SubscriptionEventTypeIdea'
    SubscriptionEventTypeIdea:
      type: string
      enum:
        - NEW
        - VOTE_CHANGED
        - FUNDING_CHANGED
        - EXPRESSIONS_CHANGED
        - RESPONSE_CHANGED
        - STATUS_CHANGED
        - TAG_CHANGED
    IdeaGetAll:
      type: object
      required:
        - postIds
      properties:
        postIds:
          type: array
          items:
            type: string

/project/{projectId}/ideasearch:
  post:
    operationId: ideaSearch
    tags: [ Idea ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: cursor
        in: query
        schema:
          $ref: 'api-client.yaml#/components/schemas/Cursor'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-idea.yaml#/components/schemas/IdeaSearch'
    responses:
      '200':
        content:
          application/json:
            schema:
              title: IdeaWithVoteSearchResponse
              type: object
              required:
                - results
              properties:
                cursor:
                  $ref: 'api-client.yaml#/components/schemas/Cursor'
                results:
                  type: array
                  items:
                    $ref: 'api-idea.yaml#/components/schemas/IdeaWithVote'
                hits:
                  $ref: 'api-idea.yaml#/components/schemas/Hits'

/project/{projectId}/idea:
  post:
    operationId: ideaCreate
    tags: [ Idea ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-idea.yaml#/components/schemas/IdeaCreate'
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-idea.yaml#/components/schemas/IdeaWithVote'
/project/{projectId}/ideagetall:
  post:
    operationId: ideaGetAll
    tags: [ Idea ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-idea.yaml#/components/schemas/IdeaGetAll'
    responses:
      '200':
        content:
          application/json:
            schema:
              title: IdeaGetAllResponse
              type: object
              required:
                - results
              properties:
                results:
                  type: array
                  items:
                    $ref: 'api-idea.yaml#/components/schemas/IdeaWithVote'
/project/{projectId}/idea/{ideaId}:
  get:
    operationId: ideaGet
    tags: [ Idea ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-idea.yaml#/components/schemas/IdeaWithVote'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
  patch:
    operationId: ideaUpdate
    tags: [ Idea ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-idea.yaml#/components/schemas/IdeaUpdate'
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-idea.yaml#/components/schemas/Idea'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
  delete:
    operationId: ideaDelete
    tags: [ Idea ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        $ref: 'api-client.yaml#/components/responses/Ok'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
/project/{projectId}/idea/{ideaId}/merge/{parentIdeaId}:
  patch:
    operationId: ideaMerge
    tags: [ Idea ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
      - name: parentIdeaId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-idea.yaml#/components/schemas/IdeaConnectResponse'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
/project/{projectId}/admin/idea/{ideaId}/voters:
  get:
    operationId: ideaVotersGetAdmin
    tags: [ IdeaAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
      - name: cursor
        in: query
        schema:
          $ref: 'api-client.yaml#/components/schemas/Cursor'
    responses:
      '200':
        content:
          application/json:
            schema:
              title: IdeaVotersAdminResponse
              type: object
              required:
                - results
              properties:
                cursor:
                  $ref: 'api-client.yaml#/components/schemas/Cursor'
                results:
                  type: array
                  items:
                    $ref: 'api-user.yaml#/components/schemas/UserAdmin'
/project/{projectId}/admin/idea/{ideaId}/merge/{parentIdeaId}:
  patch:
    operationId: ideaMergeAdmin
    tags: [ IdeaAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
      - name: parentIdeaId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-idea.yaml#/components/schemas/IdeaConnectResponse'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
/project/{projectId}/admin/idea/{ideaId}/unmerge/{parentIdeaId}:
  patch:
    operationId: ideaUnMergeAdmin
    tags: [ IdeaAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
      - name: parentIdeaId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-idea.yaml#/components/schemas/IdeaConnectResponse'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
/project/{projectId}/admin/idea/{ideaId}/link/{parentIdeaId}:
  patch:
    operationId: ideaLinkAdmin
    tags: [ IdeaAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
      - name: parentIdeaId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-idea.yaml#/components/schemas/IdeaConnectResponse'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
/project/{projectId}/admin/idea/{ideaId}/unlink/{parentIdeaId}:
  patch:
    operationId: ideaUnLinkAdmin
    tags: [ IdeaAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
      - name: parentIdeaId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-idea.yaml#/components/schemas/IdeaConnectResponse'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
/project/{projectId}/admin/subscription/idea:
  post:
    operationId: ideaSubscribeAdmin
    tags: [ IdeaAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-idea.yaml#/components/schemas/SubscriptionListenerIdea'
    responses:
      '200':
        $ref: 'api-client.yaml#/components/responses/Ok'
  delete:
    operationId: ideaUnsubscribeAdmin
    tags: [ IdeaAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-idea.yaml#/components/schemas/SubscriptionListenerIdea'
    responses:
      '200':
        $ref: 'api-client.yaml#/components/responses/Ok'
/project/{projectId}/admin/idea/search:
  post:
    operationId: ideaSearchAdmin
    tags: [ IdeaAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: cursor
        in: query
        schema:
          $ref: 'api-client.yaml#/components/schemas/Cursor'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-idea.yaml#/components/schemas/IdeaSearchAdmin'
    responses:
      '200':
        content:
          application/json:
            schema:
              title: IdeaSearchResponse
              type: object
              required:
                - results
              properties:
                cursor:
                  $ref: 'api-client.yaml#/components/schemas/Cursor'
                results:
                  type: array
                  items:
                    $ref: 'api-idea.yaml#/components/schemas/Idea'
                hits:
                  $ref: 'api-idea.yaml#/components/schemas/Hits'
/project/{projectId}/admin/idea/category/{categoryId}/aggregate:
  post:
    operationId: ideaCategoryAggregateAdmin
    tags: [ IdeaAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: categoryId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              title: IdeaAggregateResponse
              type: object
              required:
                - total
                - statuses
                - tags
              properties:
                total:
                  type: integer
                  format: int64
                statuses:
                  type: object
                  additionalProperties:
                    type: integer
                    format: int64
                tags:
                  type: object
                  additionalProperties:
                    type: integer
                    format: int64
/project/{projectId}/admin/idea/histogram:
  post:
    operationId: ideaHistogramAdmin
    tags: [ IdeaAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-idea.yaml#/components/schemas/IdeaHistogramSearchAdmin'
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-idea.yaml#/components/schemas/HistogramResponse'
/project/{projectId}/admin/idea/draft:
  post:
    operationId: ideaDraftCreateAdmin
    tags: [ IdeaAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-idea.yaml#/components/schemas/IdeaCreateAdmin'
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-idea.yaml#/components/schemas/IdeaDraftAdmin'
/project/{projectId}/admin/idea/draft/search:
  post:
    operationId: ideaDraftSearchAdmin
    tags: [ IdeaAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: cursor
        in: query
        schema:
          $ref: 'api-client.yaml#/components/schemas/Cursor'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-idea.yaml#/components/schemas/IdeaDraftSearch'
    responses:
      '200':
        content:
          application/json:
            schema:
              title: IdeaDraftSearchResponse
              type: object
              required:
                - results
              properties:
                cursor:
                  $ref: 'api-client.yaml#/components/schemas/Cursor'
                results:
                  type: array
                  items:
                    $ref: 'api-idea.yaml#/components/schemas/IdeaDraftAdmin'
/project/{projectId}/admin/idea/draft/{draftId}:
  get:
    operationId: ideaDraftGetAdmin
    tags: [ IdeaAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: draftId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-idea.yaml#/components/schemas/IdeaDraftAdmin'
  patch:
    operationId: ideaDraftUpdateAdmin
    tags: [ IdeaAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: draftId
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-idea.yaml#/components/schemas/IdeaCreateAdmin'
    responses:
      '200':
        $ref: 'api-client.yaml#/components/responses/Ok'
  delete:
    operationId: ideaDraftDeleteAdmin
    tags: [ IdeaAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: draftId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        $ref: 'api-client.yaml#/components/responses/Ok'
/project/{projectId}/admin/idea:
  post:
    operationId: ideaCreateAdmin
    tags: [ IdeaAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: deleteDraftId
        in: query
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-idea.yaml#/components/schemas/IdeaCreateAdmin'
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-idea.yaml#/components/schemas/IdeaWithVote'
  delete:
    operationId: ideaDeleteBulkAdmin
    tags: [ IdeaAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-idea.yaml#/components/schemas/IdeaSearchAdmin'
    responses:
      '200':
        $ref: 'api-client.yaml#/components/responses/Ok'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
/project/{projectId}/admin/idea/{ideaId}:
  get:
    operationId: ideaGetAdmin
    tags: [ IdeaAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-idea.yaml#/components/schemas/Idea'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
  patch:
    operationId: ideaUpdateAdmin
    tags: [ IdeaAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: 'api-idea.yaml#/components/schemas/IdeaUpdateAdmin'
    responses:
      '200':
        content:
          application/json:
            schema:
              $ref: 'api-idea.yaml#/components/schemas/Idea'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
  delete:
    operationId: ideaDeleteAdmin
    tags: [ IdeaAdmin ]
    parameters:
      - name: projectId
        in: path
        required: true
        schema:
          type: string
      - name: ideaId
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        $ref: 'api-client.yaml#/components/responses/Ok'
      '404':
        $ref: 'api-client.yaml#/components/responses/NotFound'
