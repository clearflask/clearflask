/*
 * This file is generated by jOOQ.
 */
package com.smotana.clearflask.store.mysql.model.tables.records;


import com.smotana.clearflask.store.mysql.model.tables.JooqComment;
import org.jooq.Field;
import org.jooq.Record14;
import org.jooq.Record3;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.processing.Generated;
import java.time.Instant;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "https://www.jooq.org",
                "jOOQ version:3.16.10"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class JooqCommentRecord extends UpdatableRecordImpl<JooqCommentRecord> implements Record14<String, String, String, Long, Long, String, String, Boolean, Instant, Instant, String, Long, Long, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>comment.projectId</code>.
     */
    public void setProjectid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>comment.projectId</code>.
     */
    public String getProjectid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>comment.postId</code>.
     */
    public void setPostid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>comment.postId</code>.
     */
    public String getPostid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>comment.commentId</code>.
     */
    public void setCommentid(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>comment.commentId</code>.
     */
    public String getCommentid() {
        return (String) get(2);
    }

    /**
     * Setter for <code>comment.level</code>.
     */
    public void setLevel(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>comment.level</code>.
     */
    public Long getLevel() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>comment.childCommentCount</code>.
     */
    public void setChildcommentcount(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>comment.childCommentCount</code>.
     */
    public Long getChildcommentcount() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>comment.authorUserId</code>.
     */
    public void setAuthoruserid(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>comment.authorUserId</code>.
     */
    public String getAuthoruserid() {
        return (String) get(5);
    }

    /**
     * Setter for <code>comment.authorName</code>.
     */
    public void setAuthorname(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>comment.authorName</code>.
     */
    public String getAuthorname() {
        return (String) get(6);
    }

    /**
     * Setter for <code>comment.authorIsMod</code>.
     */
    public void setAuthorismod(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>comment.authorIsMod</code>.
     */
    public Boolean getAuthorismod() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>comment.created</code>.
     */
    public void setCreated(Instant value) {
        set(8, value);
    }

    /**
     * Getter for <code>comment.created</code>.
     */
    public Instant getCreated() {
        return (Instant) get(8);
    }

    /**
     * Setter for <code>comment.edited</code>.
     */
    public void setEdited(Instant value) {
        set(9, value);
    }

    /**
     * Getter for <code>comment.edited</code>.
     */
    public Instant getEdited() {
        return (Instant) get(9);
    }

    /**
     * Setter for <code>comment.content</code>.
     */
    public void setContent(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>comment.content</code>.
     */
    public String getContent() {
        return (String) get(10);
    }

    /**
     * Setter for <code>comment.upvotes</code>.
     */
    public void setUpvotes(Long value) {
        set(11, value);
    }

    /**
     * Getter for <code>comment.upvotes</code>.
     */
    public Long getUpvotes() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>comment.downvotes</code>.
     */
    public void setDownvotes(Long value) {
        set(12, value);
    }

    /**
     * Getter for <code>comment.downvotes</code>.
     */
    public Long getDownvotes() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>comment.score</code>.
     */
    public void setScore(Double value) {
        set(13, value);
    }

    /**
     * Getter for <code>comment.score</code>.
     */
    public Double getScore() {
        return (Double) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<String, String, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<String, String, String, Long, Long, String, String, Boolean, Instant, Instant, String, Long, Long, Double> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<String, String, String, Long, Long, String, String, Boolean, Instant, Instant, String, Long, Long, Double> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return JooqComment.COMMENT.PROJECTID;
    }

    @Override
    public Field<String> field2() {
        return JooqComment.COMMENT.POSTID;
    }

    @Override
    public Field<String> field3() {
        return JooqComment.COMMENT.COMMENTID;
    }

    @Override
    public Field<Long> field4() {
        return JooqComment.COMMENT.LEVEL;
    }

    @Override
    public Field<Long> field5() {
        return JooqComment.COMMENT.CHILDCOMMENTCOUNT;
    }

    @Override
    public Field<String> field6() {
        return JooqComment.COMMENT.AUTHORUSERID;
    }

    @Override
    public Field<String> field7() {
        return JooqComment.COMMENT.AUTHORNAME;
    }

    @Override
    public Field<Boolean> field8() {
        return JooqComment.COMMENT.AUTHORISMOD;
    }

    @Override
    public Field<Instant> field9() {
        return JooqComment.COMMENT.CREATED;
    }

    @Override
    public Field<Instant> field10() {
        return JooqComment.COMMENT.EDITED;
    }

    @Override
    public Field<String> field11() {
        return JooqComment.COMMENT.CONTENT;
    }

    @Override
    public Field<Long> field12() {
        return JooqComment.COMMENT.UPVOTES;
    }

    @Override
    public Field<Long> field13() {
        return JooqComment.COMMENT.DOWNVOTES;
    }

    @Override
    public Field<Double> field14() {
        return JooqComment.COMMENT.SCORE;
    }

    @Override
    public String component1() {
        return getProjectid();
    }

    @Override
    public String component2() {
        return getPostid();
    }

    @Override
    public String component3() {
        return getCommentid();
    }

    @Override
    public Long component4() {
        return getLevel();
    }

    @Override
    public Long component5() {
        return getChildcommentcount();
    }

    @Override
    public String component6() {
        return getAuthoruserid();
    }

    @Override
    public String component7() {
        return getAuthorname();
    }

    @Override
    public Boolean component8() {
        return getAuthorismod();
    }

    @Override
    public Instant component9() {
        return getCreated();
    }

    @Override
    public Instant component10() {
        return getEdited();
    }

    @Override
    public String component11() {
        return getContent();
    }

    @Override
    public Long component12() {
        return getUpvotes();
    }

    @Override
    public Long component13() {
        return getDownvotes();
    }

    @Override
    public Double component14() {
        return getScore();
    }

    @Override
    public String value1() {
        return getProjectid();
    }

    @Override
    public String value2() {
        return getPostid();
    }

    @Override
    public String value3() {
        return getCommentid();
    }

    @Override
    public Long value4() {
        return getLevel();
    }

    @Override
    public Long value5() {
        return getChildcommentcount();
    }

    @Override
    public String value6() {
        return getAuthoruserid();
    }

    @Override
    public String value7() {
        return getAuthorname();
    }

    @Override
    public Boolean value8() {
        return getAuthorismod();
    }

    @Override
    public Instant value9() {
        return getCreated();
    }

    @Override
    public Instant value10() {
        return getEdited();
    }

    @Override
    public String value11() {
        return getContent();
    }

    @Override
    public Long value12() {
        return getUpvotes();
    }

    @Override
    public Long value13() {
        return getDownvotes();
    }

    @Override
    public Double value14() {
        return getScore();
    }

    @Override
    public JooqCommentRecord value1(String value) {
        setProjectid(value);
        return this;
    }

    @Override
    public JooqCommentRecord value2(String value) {
        setPostid(value);
        return this;
    }

    @Override
    public JooqCommentRecord value3(String value) {
        setCommentid(value);
        return this;
    }

    @Override
    public JooqCommentRecord value4(Long value) {
        setLevel(value);
        return this;
    }

    @Override
    public JooqCommentRecord value5(Long value) {
        setChildcommentcount(value);
        return this;
    }

    @Override
    public JooqCommentRecord value6(String value) {
        setAuthoruserid(value);
        return this;
    }

    @Override
    public JooqCommentRecord value7(String value) {
        setAuthorname(value);
        return this;
    }

    @Override
    public JooqCommentRecord value8(Boolean value) {
        setAuthorismod(value);
        return this;
    }

    @Override
    public JooqCommentRecord value9(Instant value) {
        setCreated(value);
        return this;
    }

    @Override
    public JooqCommentRecord value10(Instant value) {
        setEdited(value);
        return this;
    }

    @Override
    public JooqCommentRecord value11(String value) {
        setContent(value);
        return this;
    }

    @Override
    public JooqCommentRecord value12(Long value) {
        setUpvotes(value);
        return this;
    }

    @Override
    public JooqCommentRecord value13(Long value) {
        setDownvotes(value);
        return this;
    }

    @Override
    public JooqCommentRecord value14(Double value) {
        setScore(value);
        return this;
    }

    @Override
    public JooqCommentRecord values(String value1, String value2, String value3, Long value4, Long value5, String value6, String value7, Boolean value8, Instant value9, Instant value10, String value11, Long value12, Long value13, Double value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JooqCommentRecord
     */
    public JooqCommentRecord() {
        super(JooqComment.COMMENT);
    }

    /**
     * Create a detached, initialised JooqCommentRecord
     */
    public JooqCommentRecord(String projectid, String postid, String commentid, Long level, Long childcommentcount, String authoruserid, String authorname, Boolean authorismod, Instant created, Instant edited, String content, Long upvotes, Long downvotes, Double score) {
        super(JooqComment.COMMENT);

        setProjectid(projectid);
        setPostid(postid);
        setCommentid(commentid);
        setLevel(level);
        setChildcommentcount(childcommentcount);
        setAuthoruserid(authoruserid);
        setAuthorname(authorname);
        setAuthorismod(authorismod);
        setCreated(created);
        setEdited(edited);
        setContent(content);
        setUpvotes(upvotes);
        setDownvotes(downvotes);
        setScore(score);
    }
}
