/*
 * This file is generated by jOOQ.
 */
package com.smotana.clearflask.store.mysql.model.routines;


import com.smotana.clearflask.store.mysql.model.DefaultSchema;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqVoteWilson extends AbstractRoutine<Double> {

    private static final long serialVersionUID = 1L;

    /**
     * The parameter <code>vote_wilson.RETURN_VALUE</code>.
     */
    public static final Parameter<Double> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", SQLDataType.DOUBLE, false, false);

    /**
     * The parameter <code>vote_wilson.upvotes</code>.
     */
    public static final Parameter<Long> UPVOTES = Internal.createParameter("upvotes", SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>vote_wilson.downvotes</code>.
     */
    public static final Parameter<Long> DOWNVOTES = Internal.createParameter("downvotes", SQLDataType.BIGINT, false, false);

    /**
     * The parameter <code>vote_wilson.z</code>.
     */
    public static final Parameter<Double> Z = Internal.createParameter("z", SQLDataType.DOUBLE, false, false);

    /**
     * The parameter <code>vote_wilson.zSquared</code>.
     */
    public static final Parameter<Double> ZSQUARED = Internal.createParameter("zSquared", SQLDataType.DOUBLE, false, false);

    /**
     * Create a new routine call instance
     */
    public JooqVoteWilson() {
        super("vote_wilson", DefaultSchema.DEFAULT_SCHEMA, SQLDataType.DOUBLE);

        setReturnParameter(RETURN_VALUE);
        addInParameter(UPVOTES);
        addInParameter(DOWNVOTES);
        addInParameter(Z);
        addInParameter(ZSQUARED);
    }

    /**
     * Set the <code>upvotes</code> parameter IN value to the routine
     */
    public void setUpvotes(Long value) {
        setValue(UPVOTES, value);
    }

    /**
     * Set the <code>upvotes</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setUpvotes(Field<Long> field) {
        setField(UPVOTES, field);
    }

    /**
     * Set the <code>downvotes</code> parameter IN value to the routine
     */
    public void setDownvotes(Long value) {
        setValue(DOWNVOTES, value);
    }

    /**
     * Set the <code>downvotes</code> parameter to the function to be used with
     * a {@link org.jooq.Select} statement
     */
    public void setDownvotes(Field<Long> field) {
        setField(DOWNVOTES, field);
    }

    /**
     * Set the <code>z</code> parameter IN value to the routine
     */
    public void setZ(Double value) {
        setValue(Z, value);
    }

    /**
     * Set the <code>z</code> parameter to the function to be used with a {@link
     * org.jooq.Select} statement
     */
    public void setZ(Field<Double> field) {
        setField(Z, field);
    }

    /**
     * Set the <code>zSquared</code> parameter IN value to the routine
     */
    public void setZsquared(Double value) {
        setValue(ZSQUARED, value);
    }

    /**
     * Set the <code>zSquared</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    public void setZsquared(Field<Double> field) {
        setField(ZSQUARED, field);
    }
}
